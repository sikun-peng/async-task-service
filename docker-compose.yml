version: "3.8"

services:
  app:
    build: .
    image: async-task-service:latest
    container_name: tasksvc_app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped

  worker:
    build: .
    image: async-task-service:latest
    container_name: tasksvc_worker
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "rq worker -u ${REDIS_URL} tasksvc"
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: tasksvc_db
    environment:
      - POSTGRES_USER=tasksvc
      - POSTGRES_PASSWORD=tasksvc
      - POSTGRES_DB=tasksvc
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tasksvc -d tasksvc"]
      interval: 3s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: tasksvc_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: tasksvc_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      app:
        condition: service_started
    restart: unless-stopped

volumes:
  dbdata: